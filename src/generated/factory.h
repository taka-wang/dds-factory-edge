/****************************************************************

  Generated by Vortex Lite IDL to C Translator
  File name: factory.h
  Source: factory.idl
  Generated: Fri Mar 17 05:36:27 UTC 2017
  Vortex Lite: V2.0.4

*****************************************************************/

#include "dds.h"

#ifndef _DDSL_FACTORY_H_
#define _DDSL_FACTORY_H_


#ifdef __cplusplus
extern "C" {
#endif

typedef enum light_color
{
  BLUE,
  YELLOW,
  GREEN,
  RED,
  UNKNOW
} light_color;

#define light_color__alloc() \
((light_color*) dds_alloc (sizeof (light_color)));


typedef struct light_color_t
{
  uint16_t machine_id;
  char * date;
  char * time;
  light_color color;
} light_color_t;

extern const dds_topic_descriptor_t light_color_t_desc;

#define light_color_t__alloc() \
((light_color_t*) dds_alloc (sizeof (light_color_t)));

#define light_color_t_free(d,o) \
dds_sample_free ((d), &light_color_t_desc, (o))


typedef struct warning_msg_t
{
  uint16_t machine_id;
  char * date;
  char * time;
  char * msg_num;
  char * msg;
} warning_msg_t;

extern const dds_topic_descriptor_t warning_msg_t_desc;

#define warning_msg_t__alloc() \
((warning_msg_t*) dds_alloc (sizeof (warning_msg_t)));

#define warning_msg_t_free(d,o) \
dds_sample_free ((d), &warning_msg_t_desc, (o))


typedef struct alarm_msg_t
{
  uint16_t machine_id;
  char * date;
  char * time;
  char * major;
  char * minor;
  char * msg;
} alarm_msg_t;

extern const dds_topic_descriptor_t alarm_msg_t_desc;

#define alarm_msg_t__alloc() \
((alarm_msg_t*) dds_alloc (sizeof (alarm_msg_t)));

#define alarm_msg_t_free(d,o) \
dds_sample_free ((d), &alarm_msg_t_desc, (o))


typedef struct machine_status_t
{
  uint16_t machine_id;
  char * date;
  char * time;
  char * values;
} machine_status_t;

extern const dds_topic_descriptor_t machine_status_t_desc;

#define machine_status_t__alloc() \
((machine_status_t*) dds_alloc (sizeof (machine_status_t)));

#define machine_status_t_free(d,o) \
dds_sample_free ((d), &machine_status_t_desc, (o))


typedef struct table_schema_t
{
  uint16_t machine_id;
  char * value;
} table_schema_t;

extern const dds_topic_descriptor_t table_schema_t_desc;

#define table_schema_t__alloc() \
((table_schema_t*) dds_alloc (sizeof (table_schema_t)));

#define table_schema_t_free(d,o) \
dds_sample_free ((d), &table_schema_t_desc, (o))

#ifdef __cplusplus
}
#endif
#endif /* _DDSL_FACTORY_H_ */
